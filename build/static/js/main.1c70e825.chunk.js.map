{"version":3,"sources":["firebase/firebase.js","Todo-List/todoList.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","TodoListItem","todo","progress","id","className","ListItem","ListItemText","primary","secondary","Button","color","size","onClick","collection","doc","update","delete","App","useState","TodoInput","setTodoInput","Todos","setTodos","useEffect","onSnapshot","querySnapshot","docs","map","Todo","data","Progress","TextField","value","onChange","e","target","label","variant","preventDefault","add","timestamp","FieldValue","serverTimestamp","style","marginLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAYAA,IAASC,cAVY,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInBR,IAASS,YAET,IAAMC,EAAKV,IAASW,Y,kCCiBLC,MA3Bf,YAA4C,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAAUC,EAAI,EAAJA,GAU/B,OACI,sBAAKC,UAAU,YAAf,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,QAASN,EAAMO,UAAWN,EAAW,iBAAmB,gBAG1E,cAACO,EAAA,EAAD,CAASC,MAAM,UAAUC,KAAK,QAAQC,QAflD,WACId,EAAGe,WAAW,QAAQC,IAAIX,GAAIY,OAAO,CACjCb,UAAWA,KAaP,SACKA,EAAS,OAAO,WAErB,cAACO,EAAA,EAAD,CAASC,MAAM,YAAYC,KAAK,QAAQC,QAbpD,WACId,EAAGe,WAAW,QAAQC,IAAIX,GAAIa,UAYtB,mBCuDDC,MAxEf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEeF,mBAAS,IAFxB,mBAEJG,EAFI,KAEGC,EAFH,KAkCb,OA9BAC,qBACI,WAOEzB,EAAGe,WAAW,QAAQW,YAAW,SAASC,GACvCH,EACIG,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAQ,CAC3BX,GAAIW,EAAIX,GACRyB,KAAMd,EAAIe,OAAOD,KACjBE,SAAUhB,EAAIe,OAAO3B,mBATlC,IA2BF,qBAAKE,UAAU,YAAf,SACI,gCACI,sDACA,iCACI,cAAC2B,EAAA,EAAD,CACIC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAac,EAAEC,OAAOH,QACvC7B,GAAG,iBACHiC,MAAM,iBAEV,cAAC3B,EAAA,EAAD,CAAQ4B,QAAQ,YACRzB,QAtBtB,SAAcsB,GACRA,EAAEI,iBACJxC,EAAGe,WAAW,QAAQ0B,IAAI,CACvBX,KAAKT,EACLjB,UAAU,EACTsC,UAAWpD,IAASW,UAAU0C,WAAWC,oBAG7CtB,EAAa,KAeKuB,MAAO,CAACC,WAAW,IACnBlC,MAAM,UAHd,+BASHW,EAAMM,KAAI,SAAC1B,GAAD,OACP,cAAC,EAAD,CACIA,KAAMA,EAAK2B,KACX1B,SAAUD,EAAK6B,SACf3B,GAAIF,EAAKE,cC3D7B0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c70e825.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyAIL5b10XiE3-urXAF_jSbYDsr5fzEMlvo\",\n    authDomain: \"todo-app-2df8b.firebaseapp.com\",\n    projectId: \"todo-app-2df8b\",\n    storageBucket: \"todo-app-2df8b.appspot.com\",\n    messagingSenderId: \"350697482191\",\n    appId: \"1:350697482191:web:58f9b27bf204a1c59dd4ba\",\n    measurementId: \"G-RY8YS0WFEW\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst db = firebase.firestore();\nexport {db};","import React from \"react\";\nimport {Button, ListItem, ListItemText} from \"@material-ui/core\";\nimport './todo-List.css';\nimport {db} from \"../firebase/firebase\";\n\nfunction TodoListItem({todo, progress, id}){\n    function toggle(){\n        db.collection(\"Todo\").doc(id).update({\n            progress: !progress\n        })\n    }\n    function deletetodo(){\n        db.collection(\"Todo\").doc(id).delete();\n    }\n\n        return(\n            <div className=\"styleList\">\n                <ListItem>\n                    <ListItemText primary={todo} secondary={progress ? \"In progress...\" : \"Completed\"} />\n                </ListItem>\n\n                <Button  color=\"primary\" size=\"small\" onClick={toggle}>\n                    {progress?\"Done\":\"Undone\"}\n                </Button>\n                <Button  color=\"secondary\" size=\"small\" onClick={deletetodo}>\n                  x\n                </Button>\n\n            </div>\n        )\n}\n\nexport default TodoListItem;","import React, {useEffect, useState} from 'react';\nimport {Button, TextField} from '@material-ui/core';\nimport './App.css';\nimport {db} from \"./firebase/firebase\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Todo-List/todoList\";\n\nfunction App() {\n  const [TodoInput, setTodoInput] = useState('');\n    const [Todos, setTodos] = useState([]);\n\n  useEffect(\n      ()=>{\n          getTodo();\n      },\n      []\n  ) //run only on first launch\n\n  function getTodo(){\n        db.collection(\"Todo\").onSnapshot(function(querySnapshot){\n           setTodos(\n               querySnapshot.docs.map((doc)=>({\n                   id: doc.id,\n                   Todo: doc.data().Todo,\n                   Progress: doc.data().progress,\n               }))\n\n           );\n        })\n  }\n\n  function Todo(e){\n        e.preventDefault();\n      db.collection(\"Todo\").add({\n         Todo:TodoInput,\n         progress: true,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n\n      setTodoInput('');\n  }\n  return (\n    <div className=\"Container\">\n        <div >\n            <h1> Abhay ToDo List App</h1>\n            <form>\n                <TextField\n                    value={TodoInput}\n                    onChange={(e) => setTodoInput(e.target.value)}\n                    id=\"standard-basic\"\n                    label=\"Write a ToDo\"\n                />\n                <Button variant=\"contained\"\n                        onClick={Todo}\n                        style={{marginLeft:20}}\n                        color=\"primary\">\n\n                    + add new Todo\n                </Button>\n            </form>\n\n            {Todos.map((todo)=>(\n                <TodoListItem\n                    todo={todo.Todo}\n                    progress={todo.Progress}\n                    id={todo.id}\n                />\n            )\n\n                )}\n\n\n        </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}